#include <stdio.h>
# 
#int * global_a;
#void func2(){
#   printf("\n in function 2");
#    global_a = 20; // blame
#}
#
#void func1(){
#   printf("\n in function 1");
#   func2();
#}
#
#void func3(){
#   printf("\n in function 3");
#    *global_a = 20; // crash here
#}
#
#void caller1(){
#                func1(); // func1 not in bt
#                func3();
#}
#
#
#int main(){
#    caller1();
#}

## This fails because our decompiler decompiles
## functions that are not in the bt at first level.
## We need to add support for the decompilation of
## the functions that are being called from that fn.

# XFAIL: *
# RUN: %crash-blamer-ta %s | FileCheck %s
# CHECK: Blame Function is func2
--- |
  ; ModuleID = 'callee-0'
  source_filename = "callee-0"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
  
  ; Materializable
  define void @caller1() !dbg !2 {
  entry:
    unreachable
  }
  
  declare void @func1()
  
  declare void @func3()
  
  ; Materializable
  define void @func3.1() !dbg !5 {
  entry:
    unreachable
  }
  
  declare void @printf()
  
  ; Materializable
  define void @main() !dbg !6 {
  entry:
    unreachable
  }
  
  ; Materializable
  define void @func1.2() !dbg !7 {
  entry:
    unreachable
  }
  
  declare void @func2()
  
  ; Materializable
  define void @printf.3() {
  entry:
    unreachable
  }
  
  !llvm.dbg.cu = !{!0}
  
  !0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "crash-blamer", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
  !1 = !DIFile(filename: "/auto/compiler-migration/bseshadr/pac/llvm-crash-anal/c_test_cases/crash-callee.c", directory: "/")
  !2 = distinct !DISubprogram(name: "caller1", linkageName: "caller1", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !3 = !DISubroutineType(types: !4)
  !4 = !{}
  !5 = distinct !DISubprogram(name: "func3.1", linkageName: "func3.1", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !6 = distinct !DISubprogram(name: "main", linkageName: "main", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !7 = distinct !DISubprogram(name: "func1.2", linkageName: "func1.2", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)

...
---
name:            func3.1
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '0x000000000000000f' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '0x0000000000000014' }
    - { reg: rdx, value: '0x00007f73c3b578e0' }
    - { reg: rdi, value: '0x0000000000000000' }
    - { reg: rsi, value: '0x0000000000000033' }
    - { reg: rbp, value: '0x00007ffc457150c0' }
    - { reg: rsp, value: '0x00007ffc457150c0' }
    - { reg: r8, value: '0x00007f73c3d4d500' }
    - { reg: r9, value: '0x0000000000000003' }
    - { reg: r10, value: '0x0000000001e4c010' }
    - { reg: r11, value: '0x0000000000000246' }
    - { reg: r12, value: '0x00000000004004c0' }
    - { reg: r13, value: '0x00007ffc457151c0' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x000000000040062d' }
    - { reg: rflags, value: '0x0000000000010206' }
    - { reg: cs, value: '0x0000000000000033' }
    - { reg: fs, value: '0x0000000000000000' }
    - { reg: gs, value: '0x0000000000000000' }
    - { reg: ss, value: '0x000000000000002b' }
    - { reg: ds, value: '0x0000000000000000' }
    - { reg: es, value: '0x0000000000000000' }
    - { reg: eax, value: '0x0000000f' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '0x00000014' }
    - { reg: edx, value: '0xc3b578e0' }
    - { reg: edi, value: '0x00000000' }
    - { reg: esi, value: '0x00000033' }
    - { reg: ebp, value: '0x457150c0' }
    - { reg: esp, value: '0x457150c0' }
    - { reg: r8d, value: '0xc3d4d500' }
    - { reg: r9d, value: '0x00000003' }
    - { reg: r10d, value: '0x01e4c010' }
    - { reg: r11d, value: '0x00000246' }
    - { reg: r12d, value: '0x004004c0' }
    - { reg: r13d, value: '0x457151c0' }
    - { reg: r14d, value: '0x00000000' }
    - { reg: r15d, value: '0x00000000' }
    - { reg: ax, value: '0x000f' }
    - { reg: bx, value: '0x0000' }
    - { reg: cx, value: '0x0014' }
    - { reg: dx, value: '0x78e0' }
    - { reg: di, value: '0x0000' }
    - { reg: si, value: '0x0033' }
    - { reg: bp, value: '0x50c0' }
    - { reg: sp, value: '0x50c0' }
    - { reg: r8w, value: '0xd500' }
    - { reg: r9w, value: '0x0003' }
    - { reg: r10w, value: '0xc010' }
    - { reg: r11w, value: '0x0246' }
    - { reg: r12w, value: '0x04c0' }
    - { reg: r13w, value: '0x51c0' }
    - { reg: r14w, value: '0x0000' }
    - { reg: r15w, value: '0x0000' }
    - { reg: ah, value: '0x00' }
    - { reg: bh, value: '0x00' }
    - { reg: ch, value: '0x00' }
    - { reg: dh, value: '0x78' }
    - { reg: al, value: '0x0f' }
    - { reg: bl, value: '0x00' }
    - { reg: cl, value: '0x14' }
    - { reg: dl, value: '0xe0' }
    - { reg: dil, value: '0x00' }
    - { reg: sil, value: '0x33' }
    - { reg: bpl, value: '0xc0' }
    - { reg: spl, value: '0xc0' }
    - { reg: r8l, value: '0x00' }
    - { reg: r9l, value: '0x03' }
    - { reg: r10l, value: '0x10' }
    - { reg: r11l, value: '0x46' }
    - { reg: r12l, value: '0xc0' }
    - { reg: r13l, value: '0xc0' }
    - { reg: r14l, value: '0x00' }
    - { reg: r15l, value: '0x00' } }
constants:       []
machineFunctionInfo: {}
crashOreder:     1
body:             |
  bb.0:
    liveins: $rbp
  
    PUSH64r $rbp, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 14, scope: !5)
    $rbp = MOV64rr $rsp, debug-location !DILocation(line: 14, scope: !5)
    $rdi = MOV64ri 4196120, debug-location !DILocation(line: 15, column: 4, scope: !5)
    $al = MOV8ri 0, debug-location !DILocation(line: 15, column: 4, scope: !5)
    CALL64pcrel32 @printf, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 15, column: 4, scope: !5)
    $rcx = MOV64rm $noreg, 1, $noreg, 6295600, $noreg, debug-location !DILocation(line: 16, column: 6, scope: !5)
    crash-start MOV32mi $rcx, 1, $noreg, 0, $noreg, 20, debug-location !DILocation(line: 16, column: 15, scope: !5)
    $rbp = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 17, column: 1, scope: !5)
    RETQ debug-location !DILocation(line: 17, column: 1, scope: !5)

...
---
name:            caller1
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '' }
    - { reg: rdx, value: '' }
    - { reg: rdi, value: '' }
    - { reg: rsi, value: '' }
    - { reg: rbp, value: '0x00007ffc457150d0' }
    - { reg: rsp, value: '0x00007ffc457150d0' }
    - { reg: r8, value: '' }
    - { reg: r9, value: '' }
    - { reg: r10, value: '' }
    - { reg: r11, value: '' }
    - { reg: r12, value: '0x00000000004004c0' }
    - { reg: r13, value: '0x00007ffc457151c0' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x000000000040064e' }
    - { reg: rflags, value: '' }
    - { reg: cs, value: '' }
    - { reg: fs, value: '' }
    - { reg: gs, value: '' }
    - { reg: ss, value: '' }
    - { reg: ds, value: '' }
    - { reg: es, value: '' }
    - { reg: eax, value: '' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '' }
    - { reg: edx, value: '' }
    - { reg: edi, value: '' }
    - { reg: esi, value: '' }
    - { reg: ebp, value: '0x457150c0' }
    - { reg: esp, value: '0x457150c0' }
    - { reg: r8d, value: '' }
    - { reg: r9d, value: '' }
    - { reg: r10d, value: '' }
    - { reg: r11d, value: '' }
    - { reg: r12d, value: '' }
    - { reg: r13d, value: '' }
    - { reg: r14d, value: '' }
    - { reg: r15d, value: '' }
    - { reg: ax, value: '' }
    - { reg: bx, value: '' }
    - { reg: cx, value: '' }
    - { reg: dx, value: '' }
    - { reg: di, value: '' }
    - { reg: si, value: '' }
    - { reg: bp, value: '' }
    - { reg: sp, value: '0x50c0' }
    - { reg: r8w, value: '' }
    - { reg: r9w, value: '' }
    - { reg: r10w, value: '' }
    - { reg: r11w, value: '' }
    - { reg: r12w, value: '' }
    - { reg: r13w, value: '' }
    - { reg: r14w, value: '' }
    - { reg: r15w, value: '' }
    - { reg: ah, value: '' }
    - { reg: bh, value: '' }
    - { reg: ch, value: '' }
    - { reg: dh, value: '' }
    - { reg: al, value: '' }
    - { reg: bl, value: '' }
    - { reg: cl, value: '' }
    - { reg: dl, value: '' }
    - { reg: dil, value: '' }
    - { reg: sil, value: '' }
    - { reg: bpl, value: '' }
    - { reg: spl, value: '' }
    - { reg: r8l, value: '' }
    - { reg: r9l, value: '' }
    - { reg: r10l, value: '' }
    - { reg: r11l, value: '' }
    - { reg: r12l, value: '' }
    - { reg: r13l, value: '' }
    - { reg: r14l, value: '' }
    - { reg: r15l, value: '' } }
constants:       []
machineFunctionInfo: {}
crashOreder:     2
body:             |
  bb.0:
    liveins: $rbp
  
    PUSH64r $rbp, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 19, scope: !2)
    $rbp = MOV64rr $rsp, debug-location !DILocation(line: 19, scope: !2)
    CALL64pcrel32 @func1, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 20, column: 17, scope: !2)
    CALL64pcrel32 @func3, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 21, column: 17, scope: !2)
    $rbp = crash-start POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 22, column: 1, scope: !2)
    RETQ debug-location !DILocation(line: 22, column: 1, scope: !2)

...
---
name:            main
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '' }
    - { reg: rdx, value: '' }
    - { reg: rdi, value: '' }
    - { reg: rsi, value: '' }
    - { reg: rbp, value: '0x00007ffc457150e0' }
    - { reg: rsp, value: '0x00007ffc457150e0' }
    - { reg: r8, value: '' }
    - { reg: r9, value: '' }
    - { reg: r10, value: '' }
    - { reg: r11, value: '' }
    - { reg: r12, value: '0x00000000004004c0' }
    - { reg: r13, value: '0x00007ffc457151c0' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x0000000000400659' }
    - { reg: rflags, value: '' }
    - { reg: cs, value: '' }
    - { reg: fs, value: '' }
    - { reg: gs, value: '' }
    - { reg: ss, value: '' }
    - { reg: ds, value: '' }
    - { reg: es, value: '' }
    - { reg: eax, value: '' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '' }
    - { reg: edx, value: '' }
    - { reg: edi, value: '' }
    - { reg: esi, value: '' }
    - { reg: ebp, value: '0x457150c0' }
    - { reg: esp, value: '0x457150c0' }
    - { reg: r8d, value: '' }
    - { reg: r9d, value: '' }
    - { reg: r10d, value: '' }
    - { reg: r11d, value: '' }
    - { reg: r12d, value: '' }
    - { reg: r13d, value: '' }
    - { reg: r14d, value: '' }
    - { reg: r15d, value: '' }
    - { reg: ax, value: '' }
    - { reg: bx, value: '' }
    - { reg: cx, value: '' }
    - { reg: dx, value: '' }
    - { reg: di, value: '' }
    - { reg: si, value: '' }
    - { reg: bp, value: '' }
    - { reg: sp, value: '0x50c0' }
    - { reg: r8w, value: '' }
    - { reg: r9w, value: '' }
    - { reg: r10w, value: '' }
    - { reg: r11w, value: '' }
    - { reg: r12w, value: '' }
    - { reg: r13w, value: '' }
    - { reg: r14w, value: '' }
    - { reg: r15w, value: '' }
    - { reg: ah, value: '' }
    - { reg: bh, value: '' }
    - { reg: ch, value: '' }
    - { reg: dh, value: '' }
    - { reg: al, value: '' }
    - { reg: bl, value: '' }
    - { reg: cl, value: '' }
    - { reg: dl, value: '' }
    - { reg: dil, value: '' }
    - { reg: sil, value: '' }
    - { reg: bpl, value: '' }
    - { reg: spl, value: '' }
    - { reg: r8l, value: '' }
    - { reg: r9l, value: '' }
    - { reg: r10l, value: '' }
    - { reg: r11l, value: '' }
    - { reg: r12l, value: '' }
    - { reg: r13l, value: '' }
    - { reg: r14l, value: '' }
    - { reg: r15l, value: '' } }
constants:       []
machineFunctionInfo: {}
crashOreder:     3
body:             |
  bb.0:
    liveins: $rbp
  
    PUSH64r $rbp, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 25, scope: !6)
    $rbp = MOV64rr $rsp, debug-location !DILocation(line: 25, scope: !6)
    CALL64pcrel32 @caller1, csr_64, implicit $rsp, implicit $ssp, implicit-def $eax, implicit-def $eax, debug-location !DILocation(line: 26, column: 5, scope: !6)
    $eax = crash-start XOR32rr undef $eax, undef $eax, implicit-def $eflags, debug-location !DILocation(line: 26, column: 5, scope: !6)
    $rbp = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 27, column: 1, scope: !6)
    RETQ debug-location !DILocation(line: 27, column: 1, scope: !6)

...
---
name:            func1.2
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: [] }
constants:       []
machineFunctionInfo: {}
crashOreder:     0
body:             |
  bb.0:
    liveins: $rbp
  
    PUSH64r $rbp, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 9, scope: !7)
    $rbp = MOV64rr $rsp, debug-location !DILocation(line: 9, scope: !7)
    $rsp = SUB64ri8 $rsp, 16, implicit-def $eflags, debug-location !DILocation(line: 9, scope: !7)
    $rdi = MOV64ri 4196104, debug-location !DILocation(line: 10, column: 4, scope: !7)
    $al = MOV8ri 0, debug-location !DILocation(line: 10, column: 4, scope: !7)
    CALL64pcrel32 @printf, csr_64, implicit $rsp, implicit $ssp, implicit-def $eax, debug-location !DILocation(line: 10, column: 4, scope: !7)
    MOV32mr $rbp, 1, $noreg, -4, $noreg, $eax, debug-location !DILocation(line: 10, column: 4, scope: !7)
    CALL64pcrel32 @func2, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 11, column: 4, scope: !7)
    $rsp = ADD64ri8 $rsp, 16, implicit-def $eflags, debug-location !DILocation(line: 12, column: 1, scope: !7)
    $rbp = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 12, column: 1, scope: !7)
    crash-start RETQ debug-location !DILocation(line: 12, column: 1, scope: !7)

...
---
name:            printf.3
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: [] }
constants:       []
machineFunctionInfo: {}
crashOreder:     0
body:             |
  bb.0:
    liveins: $rip
  
    JMP64m $rip, 1, $noreg, 2100066, $noreg
  
  bb.1:
    PUSH64i32 0, implicit-def $rsp, implicit $rsp
    crash-start JMP_4 4195488
  
  bb.2:

...
