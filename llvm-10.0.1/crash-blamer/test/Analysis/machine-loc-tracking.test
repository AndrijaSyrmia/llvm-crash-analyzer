## Test case compiled with clang -O0 -g
## #include <stdio.h>
## typedef struct node {
## int *fn;
## } T;
##
## void h(int *r) {
## *r = 0; // crash
## }
##
## void g (T*q) {
## int *t = q->fn;
## h(t);
## }
##
## void f() {
## T p;
## T q2;
## p.fn = NULL; // blame point
## q2.fn = NULL;
## g(&p);
## }
##
## int main() {
## f();
## return 0;
## }

# RUN: %crash-blamer --core-file=%S/../Decompiler/Inputs/core.clang-test00.93177 \
# RUN:     %S/../Decompiler/Inputs/clang-test00 -debug-only=machinelocdataflow < %s 2>&1 | FileCheck %s

# CHECK: ****** Machine Location Tracking for function: g
# CHECK: *** Transfer function for each basic block ***
# CHECK: ** BB: 0
# CHECK: RSP = Value{bb: 0, inst: 11, loc: RSP}
# CHECK: SPL = Value{bb: 0, inst: 11, loc: SPL}
# CHECK: SP = Value{bb: 0, inst: 11, loc: SP}
# CHECK: ESP = Value{bb: 0, inst: 11, loc: ESP}
# CHECK: SPH = Value{bb: 0, inst: 11, loc: SPH}
# CHECK: HSP = Value{bb: 0, inst: 11, loc: HSP}
# CHECK: RBP = Value{bb: 0, inst: 11, loc: RBP}
# CHECK: EBP = Value{bb: 0, inst: 11, loc: EBP}
# CHECK:  BP = Value{bb: 0, inst: 11, loc: BP}
# CHECK: BPL = Value{bb: 0, inst: 11, loc: BPL}
# CHECK: BPH = Value{bb: 0, inst: 11, loc: BPH}
# CHECK: HBP = Value{bb: 0, inst: 11, loc: HBP}
# CHECK: EFLAGS = Value{bb: 0, inst: 10, loc: EFLAGS}
# CHECK: AH = Value{bb: 0, inst: 9, loc: AH}
# CHECK: AX = Value{bb: 0, inst: 9, loc: AX}
# CHECK: EAX = Value{bb: 0, inst: 9, loc: EAX}
# CHECK: RAX = Value{bb: 0, inst: 9, loc: RAX}
# CHECK: AL = Value{bb: 0, inst: 9, loc: AL}
# CHECK: HAX = Value{bb: 0, inst: 9, loc: HAX}
# CHECK: DIL = Value{bb: 0, inst: 9, loc: DIL}
# CHECK: DI = Value{bb: 0, inst: 9, loc: DI}
# CHECK: EDI = Value{bb: 0, inst: 9, loc: EDI}
# CHECK: RDI = Value{bb: 0, inst: 9, loc: RDI}
# CHECK: DIH = Value{bb: 0, inst: 9, loc: DIH}
# CHECK: HDI = Value{bb: 0, inst: 9, loc: HDI}
